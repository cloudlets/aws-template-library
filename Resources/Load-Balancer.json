{#
    Load Balancer for HTTP traffic on a specified TCP port

    Assumes:

    1) that the VPC is named "VPC,"
    2) a public network in the VPC named "PublicSubnet",
    3) a private network tier "PrivateSubnet",
    4) a Launch Config named "LaunchConfig"
    5) typical set of instance parameters, in particular value "InstanceCount"

#}

    {%- macro load_balancer(
                              name,
                              subnet=None,
                              subnet2=None,
                              internal=None,
                              port=80
                            ) -%}

    {% if port is number %}
        {% set lbport = '"LoadBalancerPort" : "{{ port }}"' %}
        {% set iport = '"InstancePort" : "{{ port }}"' %}
        {% set fromport = '"FromPort" : "{{ port }}"' %}
        {% set toport = '"ToPort" : "{{ port }}"' %}
        {% set healthcheck = '"HTTP:{{ port }}/"' %}
    {% else %}
        {% set lbport = '"LoadBalancerPort" : {{ port }}' %}
        {% set iport = '"InstancePort" : {{ port }}' %}
        {% set fromport = '"FromPort" : {{ port }}' %}
        {% set toport = '"ToPort" : {{ port }}' %}
        {% set healthcheck = '"Fn::Join" : ["", ["HTTP:", {{ port }} , "/"]]' %}
    {% endif %}

    "{{ name }}ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "SecurityGroups" : [ { "Ref" : "{{ name }}LoadBalancerSecurityGroup" } ],
        {% if subnet is not none %}
        "Subnets" : [ { "Ref" : "{{ subnet }}" }
        {% if subnet2 is not none %}, { "Ref" : "{{ subnet2 }}" } {% endif %}
         ],
        {% endif %}
        {% if internal is not none %}"Scheme" : "internal", {% endif %}
        "Listeners" : [ { {{ lbport }},  {{ iport }},  "Protocol" : "HTTP" }  ],
        "HealthCheck" : {
          "Target" : {{ healthcheck }},
          "HealthyThreshold" : "3",
          "UnhealthyThreshold" : "5",
          "Interval" : "10",
          "Timeout" : "5"
        }
      },
      "DependsOn" : "AttachGateway"
    },

    "{{ name }}LoadBalancerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "{{ name }} ELB Security Group with HTTP access on specified port 80 from the internet",
        {% if subnet is not none %}"VpcId" : { "Ref" : "VPC" },{% endif %}
        "SecurityGroupIngress" : [ { "IpProtocol" : "tcp", {{ fromport }},  {{ toport }},  "CidrIp" : "0.0.0.0/0"} ],
        "SecurityGroupEgress"  : [ { "IpProtocol" : "tcp", {{ fromport }},  {{ toport }},  "CidrIp" : "0.0.0.0/0"} ]
      }
    }

    {%- endmacro  %}
{# vim: set ft=jinja ts=4 sw=4 tw=0 foldmethod=syntax :#}
